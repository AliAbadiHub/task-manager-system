// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  projects  Project[]
  tasks     Task[]
  labels    Label[]
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  tasks       Task[]
  user        User     @relation(fields: [userId], references: [id])
}

model Task {
  id          Int         @id @default(autoincrement())
  title       String
  description String?
  status      String
  dueDate     DateTime?
  priority    String?
  projectId   Int?
  userId      Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now()) @updatedAt
  labels      TaskLabel[]
  project     Project?    @relation(fields: [projectId], references: [id])
  user        User        @relation(fields: [userId], references: [id])
}

model Label {
  id        Int         @id @default(autoincrement())
  name      String
  color     String?
  userId    Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now()) @updatedAt
  tasks     TaskLabel[]
  user      User        @relation(fields: [userId], references: [id])
}

model TaskLabel {
  taskId  Int
  labelId Int
  task    Task  @relation(fields: [taskId], references: [id])
  label   Label @relation(fields: [labelId], references: [id])

  @@id([taskId, labelId])
}
